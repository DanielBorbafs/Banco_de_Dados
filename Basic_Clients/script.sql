/* REGRAS SOBRE FK A SEREM SEGUIDAS,
 - Em relacionamentos 1x1 a chave estrangeira fica na tabela mais fraca 
 - em relacionamento 1xN a chave estrangeira ficara sempre na cardinalidade N */

CREATE TABLE CLIENTE (
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M', 'F') NOT NULL,
	EMAIL VARCHAR(50) UNIQUE,
	CPF	VARCHAR(15) UNIQUE
);


CREATE TABLE ENDERECO( 
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL
	ID_CLIENTE INT UNIQUE,
	FOREIGN KEY (ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
); 



CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('RES', 'COM', 'CEL') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL
	ID_CLIENTE INT,
	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);


-- INSERINDO DADOS NA TABELA CLIENTE
INSERT INTO CLIENTE VALUES(NULL, 'DANIEL', 'M', 'JOAO@IG.COM', '7656789254');
INSERT INTO CLIENTE VALUES(NULL, 'ISADORA', 'M', 'ISADORA@IG.COM', '987856365');
INSERT INTO CLIENTE VALUES(NULL, 'SOFIA', 'M', 'SOFIA@IG.COM', '158789887');
/* Alterando dados de uma coluna */
UPDATE CLIENTE SET SEXO = 'F'
WHERE IDCLIENTE = 3

-- INSERINDO DADOS NA TABELA ENDEREÇO
INSERT INTO ENDERECO VALUES(NULL, 'PARQUE DAS GAIVOTAS', 'SERRA', 'MANGUINHOS', 'MG', 6);


-- INSERINDO DADOS NA TABELA TELEFONE
INSERT INTO TELEFONE VALUES( NULL, 'COM', '998257545', 3);
INSERT INTO TELEFONE VALUES( NULL, 'RES', '998257545', 3);
INSERT INTO TELEFONE VALUES( NULL, 'RES', '998257545', 1);
INSERT INTO TELEFONE VALUES( NULL, 'COM', '325187865', 6);
/* PROJEÇAO -> É TUDO QUE VOCE QUER VER NA TELA */

SELECT 2 + 2 AS SOMA, NOME, NOW()
FROM CLIENTE;

/* SELEÇÃO -> É UM SUBCONJUNTO DO CONJUNTO TOTAL DE REGISTROS DE UMA TABELA
A CLÁUSULA DE SELEÇÃO É WHERE
*/

SELECT NOME, SEXO, EMAIL /* PROJECAO*/
FROM CLIENTE /* ORIGEM*/
WHERE SEXO = 'F'; /* SELECAO */

SELECT NUMERO /* PROJECAO */
FROM TELEFONE /* ORIGEM */
WHERE TIPO = 'CEL'; /* SELECAO */


/* JUNÇAO -> JOIN */

/* NOME, SEXO, BAIRRO, CIDADE */

SELECT NOME, SEXO, BAIRRO, CIDADE /* PROJECAO*/
FROM CLIENTE /* ORIGEM */
	INNER JOIN ENDERECO /* JUNCAO */
	ON IDCLIENTE = ID_CLIENTE 
WHERE NOME = 'DANIEL'; /* SELECAO*/

/* NOME, SEXO, EMAIL, TIPO, NUMERO */
SELECT NOME, SEXO, EMAIL, TIPO, NUMERO 
FROM CLIENTE
	INNER JOIN TELEFONE
	ON IDCLIENTE = ID_CLIENTE;

/* NOME, SEXO, BAIRRO, TIPO, NUMERO */

SELECT C.NOME, C.SEXO, E.BAIRRO, E.CIDADE, T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E 
ON C.IDCLIENTE= E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

SELECT C.IDCLIENTE, C.NOME, C.SEXO, E.BAIRRO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE IDCLIENTE = 6;

/* INSERTS COM EMAILS NULOS */
INSERT INTO CLIENTE VALUES(NULL, 'MARIA', 'F', NULL , '98745632128');
INSERT INTO CLIENTE VALUES(NULL, 'JOAO', 'M', NULL , '9852157885');
INSERT INTO CLIENTE VALUES(NULL, 'MARIO', 'M', NULL , '3159785211');
INSERT INTO CLIENTE VALUES(NULL, 'MARCOS', 'M', NULL , '9687852158');
INSERT INTO CLIENTE VALUES(NULL, 'LIZANDRA', 'F', NULL , '9962114556');

/* ALTERANDO O SELECT PARA AMOSTRAGEM DE VALORES NULOS

IFNULL()

*/

SELECT C.NOME, 
	IFNULL(C.EMAIL,'NÃO POSSUI EMAIL CADASTRADO'),
	E.BAIRRO,
	T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE IDCLIENTE = 6;

SELECT NOME, IFNULL(EMAIL, 'NAO POSSUI EMAIL CADASTRADO') BAIRRO, SEXO, CPF
FROM CLIENTE

/*
	DML - DATA MANIPULATION LANGUAGE
	DDL - DATA DEFINITION LANGUAGE
	DCL - DATA CONTROL LANGUAGE
	TCL - TRANSACTION CONTROL LANGUAGE
*/

-- ATUALIZANDO DADOS
SELECT * FROM CLIENTE
WHERE IDCLIENTE = 3;

/* UPDATE */
UPDATE CLIENTE 
SET SEXO = 'F'
WHERE IDCLIENTE = 3;

/* DELETE */
SELECT * FROM CLIENTE
WHERE IDCLIENTE = 8;

DELETE FROM CLIENTE WHERE IDCLIENTE = 8;

/*
 DDL - DATA DEFINITION LANGUAGE
*/
CREATE TABLE PRODUTO (
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME_PRODUTO VARCHAR(30) NOT NULL,
	PRECO INT,
	FRETE FLOAT(10,2) NOT NULL 
);

/* ALTER TABLE */

-- ALTERANDO O NOME DE UMA COLUNA - CHANGE
ALTER TABLE PRODUTO
CHANGE PRECO VALOR_UNITARIO INT NOT NULL;

DESC PRODUTO

ALTER TABLE PRODUTO
CHANGE VALOR_UNITARIO VALOR_UNITARIO INT;


/* MODIFY  ALTERANDO O TIPO*/

ALTER TABLE PRODUTO 
MODIFY VALOR_UNITARIO VARCHAR(50) NOT NULL


/* ADICIONANDO COLUNAS */

ALTER TABLE PRODUTO 
ADD PESO FLOAT(10,2) NOT NULL;

/* APAGANDO UMA COLUNA */
ALTER TABLE PRODUTO 
DROP COLUMN PESO;


/* ADICIONANDO UMA COLUNA NA ORDEM ESPECIFICA */
ALTER TABLE PRODUTO
ADD COLUMN PESO FLOAT(10,2) NOT NULL
AFTER NOME_PRODUTO;


/* ADICIONANDO NA PRIMEIRA POSIÇÃO */
ALTER TABLE PRODUTO
ADD COLUMN PESO FLOAT(10,2) NOT NULL
FIRST;

/------------------------------- 07/04/2024 ---------------------/

/* ORDER BY */

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);


INSERT INTO ALUNOS VALUES(1, 'DANIEL');
INSERT INTO ALUNOS VALUES(2, 'MARCOS');
INSERT INTO ALUNOS VALUES(3, 'ANDRE');
INSERT INTO ALUNOS VALUES(4, 'MAFRA');
INSERT INTO ALUNOS VALUES(5, 'BEATRIZ');

/* ORDENANDO PELO NOME DA COLUNA */

SELECT * FROM ALUNOS
ORDER BY NUMERO;

/* ORDENANDO PELO INDICE ( NUMERO DA COLUNA ) */
SELECT * FROM ALUNOS
ORDER BY 2;

/* ORDENANDO POR MAIS DE UMA COLUNA */
SELECT * FROM ALUNOS
ORDER BY NUMERO, NOME;

/* UTILIZANDO COM PROJECAO */
SELECT NOME FROM ALUNOS
ORDER BY NUMERO, NOME;


SELECT * FROM ALUNOS
ORDER BY 1 ASC, 2 DESC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC, 2 DESC;

------------------------------- ALTERANDO DELIMITADOR

DELIMITER $ 

/* procedures SINTAXE */ 
DELIMITER $


CREATE PROCEDURE NOME()
BEGIN

	QUALQUER PROGRAMACAO;
END
$


CREATE PROCEDURE NOME_EMPRESA()
BEGIN
	SELECT 'UNIVERSIDADE DOS DADOS' AS EMPRESA;
END
$


/* PROCEDURE NO MUNDO REAL */

DELIMITER #

STATUS

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30), 
						   P_HORAS INT(3),
						   P_PRECO FLOAT(10,2))
BEGIN 
	INSERT INTO CURSOS VALUES(NULL, P_NOME, P_HORAS, P_PRECO);
END

#

DELIMITER ;


/* CHAMANDO PROCEDURE */

CALL CAD_CURSO('BI SQL SERVER', 35, 3100.00);
CALL CAD_CURSO('POWER BI', 20, 1000.00);
CALL CAD_CURSO('TABLEAU', 30, 1200.00)

/* CRIAR UMA PROCEDURE PARA CADASTRAR CLIENTES */
/* procedure para cadastrar clientes */

DELIMITER #

CREATE PROCEDURE CAD_CLIENTES(P_NOME VARCHAR(30), P_SEXO ENUM('M','F'), P_EMAIL VARCHAR(50), P_CPF VARCHAR(15))

BEGIN

	INSERT INTO CLIENTE VALUES(NULL, P_NOME, P_SEXO, P_EMAIL, P_CPF);
END

#

DELIMITER ;
CALL CAD_CLIENTES('VALQUIRIA', 'F', 'CONTATO.VALQUIRIA@GMAIL.COM', '99879875120');

/* FUNCOES DE AGREGACAO */

CREATE TABLE PEDIDOS (
	IDPEDIDOS INT PRIMARY KEY AUTO_INCREMENT,
	VALORTOTAL DECIMAL(10,2),
	ID_CLIENTE INT UNIQUE,
	FOREIGN KEY (ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

INSERT INTO PEDIDOS VALUES(NULL, '1225.20', 1);
INSERT INTO PEDIDOS VALUES(NULL, '1550.30', 3);
INSERT INTO PEDIDOS VALUES(NULL, '1820.20', 5);

/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA*/

SELECT MAX(VALORTOTAL) AS MAIOR_COMPRA
FROM PEDIDOS;

/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(VALORTOTAL) AS MENOR_COMPRA
FROM PEDIDOS;

/* AVG - TRAZ O VALOR MEDIO DE UMA COLUNA */

SELECT AVG(VALORTOTAL) AS MEDIA_PEDIDOS
FROM PEDIDOS; #MUITAS CASAS DECIMAIS

# FUNCAO TRUNCATE PARA TRUNCAR CASAS DECIMAIS

SELECT TRUNCATE(AVG(VALORTOTAL), 2) AS MEDIA_PEDIDOS
FROM PEDIDOS; #MUITAS CASAS DECIMAIS

